name: Semantic Release with Python dependencies for build 
  
on:  
  workflow_call:  
    secrets:  
      PAT:  
        required: true  
      AWS_ACCESS_KEY_ID:  
        required: false  
      AWS_SECRET_ACCESS_KEY:  
        required: false  
      AWS_DEFAULT_REGION:  
        required: false  
  
    outputs:  
      version:  
        description: 'The next release version'  
        value: ${{ jobs.release.outputs.version }}  
  
jobs:  
  release:  
    name: Release using python-semantic-release config.  
    runs-on: ubuntu-latest  
  
    outputs:  
      version: ${{ steps.latest-release.outputs.version }}  
  
    steps:  
      - name: Checkout repository  
        uses: actions/checkout@v4  
        with:  
          token: ${{ secrets.PAT }}  
          fetch-depth: 0  
  
      - name: Install poetry  
        run: pipx install poetry  
  
      - name: Extract Python version from pyproject.toml  
        id: python-version  
        run: |  
          version=$(grep '^python =' pyproject.toml | sed 's/python = "//;s/"//;s/\^//')          echo "Extracted python version: $version"          echo "version=$version" >> $GITHUB_OUTPUT  
      - name: Setup Python  
        uses: actions/setup-python@v4  
        with:  
          python-version: ${{ steps.python-version.outputs.version }}  
          cache: 'poetry'  
  
      - name: Install dependencies  
        run: |   
          poetry install  

      - name: Release
        id: release
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: |
          npx semantic-release
          
      - name: Get release version  
        id: latest-release  
        run: |  
          RELEASE_VERSION=$(gh release list --repo ${{ github.repository }} | head -n 1 | cut -f 1)          echo "version=$RELEASE_VERSION" >> "$GITHUB_ENV"        env:  
          GH_TOKEN: ${{ secrets.PAT }}
