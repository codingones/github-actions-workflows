name: Create Terraform Cloud Workspace for AWS ephemeral environment

on:
  workflow_call:
    inputs:
      product:
        required: true
        type: string
      service:
        required: true
        type: string
      branch:
        required: true
        type: string

    secrets:
      TF_API_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

    outputs:
      tf-workspace:
        description: "Terraform workspace name within the organization"
        value: ${{ jobs.create-environment.outputs.tf-workspace }}

jobs:
  create-environment:
    runs-on: ubuntu-latest
    outputs:
      tf-workspace: ${{ steps.tf-workspace.outputs.workspace }}
    steps:
      - name: Checkout client infrastructure repository
        uses: actions/checkout@v3
        with:
          repository: codingones/ephemeral-environment-infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: >-
          terraform apply
          -auto-approve
          -input=false
          -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}"
          -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          -var="product=${{ inputs.product }}"
          -var="service=${{ inputs.service }}"
          -var="branch=$(echo ${{ inputs.branch }} | sed -r 's/refs\/heads\///')"
          -var="tf_api_token=${{ secrets.TF_API_TOKEN }}"

      - name: Set the terraform workspace name output as a workflow output
        id: tf-workspace
        run: |
          echo "workspace=$(terraform output -raw workspace_name)" >>$GITHUB_OUTPUT
